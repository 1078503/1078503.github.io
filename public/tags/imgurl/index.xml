<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ImgURL on 近视眼逛博客</title>
    <link>https://ditou.org/tags/imgurl/</link>
    <description>Recent content in ImgURL on 近视眼逛博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 04 Oct 2019 17:04:09 +0800</lastBuildDate><atom:link href="https://ditou.org/tags/imgurl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【分享】ImgURL图床源码</title>
      <link>https://ditou.org/2019/10/1/</link>
      <pubDate>Fri, 04 Oct 2019 17:04:09 +0800</pubDate>
      
      <guid>https://ditou.org/2019/10/1/</guid>
      <description>ImgURL是一个简单、纯粹的图床程序，让个人图床多一个选择。使用PHP + SQLite 3开发。
主要功能  支持拽拖上传、多图上传、Ctrl + V粘贴上传、URL上传 支持图片裁剪，自动生成缩略图 限制访客上传数量 图片压缩/批量压缩 图片鉴黄/批量鉴黄 API支持 在线更新 外部存储  环境要求  PHP &amp;gt;= 5.6 PDO_SQLite GD2 ImageMagick fileinfo pathinfo  安装  常规安装请参考帮助文档：https://www.xiaoz.me/doc/ 宝塔面板安装ImgURL参考：https://www.xiaoz.me/archives/12081  GitHub：https://github.com/helloxz/imgurl.git
​ 博主本人使用它自建的个人博客专用图床（https://img.dtz9.com）已经有一段时间了，感觉非常的好用和方便。
为什么要自建图床 ​ 众所周知，各类动态博客都支持后台上传图片在日志中使用。但一直以来我遇到的最大的麻烦，就是经常的折腾过程中会存在迁移过程中的未知错误和图片保存备份的困难。使用图床获取一个外链地址就方便多了，日志中除了文本以外的调用使用绝对地址链接能有效的避免一些尴尬，因为你只需要保存或备份文章数据就行了。体现在动态博客中就是备份数据库，不用去管上传的图片目录，这样可以有效降低迁移的难度和复杂程度。
​ 记得有博友说过，一个网页的简洁优雅，不是不断的做减法能够实现的，而是要有效的做加法。这也是我为什么更愿意使用hugo静态博客生成器的道理，过程操作起来看似复杂，但体现在页面上就是那么的简洁优雅。当然，我做的并不好。至少我自己喜欢😍。
​ 目前我的个人图床允许游客每日上传1张图片用于外链，每张图片不得超过1M大小并会做压缩处理。禁止违规违权图片的上传且不保证图片链接的长期有效性。
地址：https://img.dtz9.com
**程序作者提供的免费图床：**https://imgurl.org/
免费版源码不支持MySQL数据库，有收费的专业版可供有需求的朋友使用更多功能和技术服务。</description>
    </item>
    
    <item>
      <title>【网站维护】未雨绸缪启用自建图床</title>
      <link>https://ditou.org/2019/06/15/</link>
      <pubDate>Fri, 21 Jun 2019 22:22:36 +0800</pubDate>
      
      <guid>https://ditou.org/2019/06/15/</guid>
      <description>开始前先来一张图镇楼 昨天说到增加了对思源宋体的支持，另外还把评论区完善了一下。
今天带来的变化是启用了自用的图床，老是蹭公益图床也不是个办法，另外目前的VPS资源加载点图片应该还是绰绰有余的。
图床源码使用的是 ImgURL ← 这个页面本身就是一个公益图床，欢迎去原作者那里围观并对作者表示支持 → 作者的博客在这里。
说说这个图床源码的特点，很方便实用。  图片的上传和预览自不用说，上传完成后可以很方便的复制代码，有图片链接、html、markdown以及BBcode四种环境的代码复制支持。 支持URL上传，你可以通过后台把外站的图片链接直接粘贴进去上传到你自己的图床里面。这个功能很赞，对于站长批量更换图床是一个非常好的支持。我的博客因为文章和图片不多，我在本地的markdown原稿中找出所有的图片链接放进后台界面，然后一键上传。再对所有的原稿里的图片做一个个的链接更新就完事儿。我在想那些动不动就几百上千篇文章的博客如果需要换图床该怎么活？要是我怕是会被吓的直接删库跑路了&amp;hellip; 支持图片压缩，需要调用第三方API。这个就更赞了，流量都是银子啊。我之前的文章中有几张图片每张图都是1M+的体积，每次图片加载都超级慢，因为之前使用的是 sm.ms 的公益图床，也就没怎么在乎，大佬们看到了不要骂我，哈哈。我1.5M的图片压缩后大概500k+，我对这个工具已经很满意了。另外，这个压缩的API应该是每月500张图片的限额，大多数人够用了。如果你拿来做公益图床开放给游客上传可能会超量，超过500张限额还需要继续使用压缩服务的话就需要额外付费了。 图片智能鉴黄也是有的，当然误判率一般都会存在，我因为是自用不对外所以这个就用不上了。 作者文档有写支持图片水印，但我并没有找到这个功能的后台支持设置，有可能作者还在开发当中？期待。  总的来说目前是我已知的图床源码中最好的选择，如果你知道更好的方案欢迎在评论区留言分享给我。
这些更新的目的是为了预防第三方服务不稳定对我的影响，比如之前准备使用的Valine评论方案今天就听说有事故。把一些能够控制的东西放在同一个服务器的好处就是一荣俱荣一损俱损，只要页面能访问所有元素就都能正常加载。如果遇到事故，可以整体快速迁移而不用重新构建服务环境。
将内页友链移到了全站左侧可见，要跟我友情的可以报名了。</description>
    </item>
    
  </channel>
</rss>
